<?xml version="1.0" encoding="utf-8"?>
<feed xmlns="http://www.w3.org/2005/Atom">
  <title>Hexo</title>
  
  <link href="/atom.xml" rel="self"/>
  
  <link href="http://yoursite.com/"/>
  <updated>2017-02-17T15:02:12.000Z</updated>
  <id>http://yoursite.com/</id>
  
  <author>
    <name>Yunkou</name>
    
  </author>
  
  <generator uri="http://hexo.io/">Hexo</generator>
  
  <entry>
    <title> 读《别处生活》</title>
    <link href="http://yoursite.com/2017/02/17/%E8%AF%BB%E3%80%8A%E5%88%AB%E5%A4%84%E7%94%9F%E6%B4%BB%E3%80%8B/"/>
    <id>http://yoursite.com/2017/02/17/读《别处生活》/</id>
    <published>2017-02-17T15:01:43.000Z</published>
    <updated>2017-02-17T15:02:12.000Z</updated>
    
    <content type="html"><![CDATA[<p><img src="http://ww3.sinaimg.cn/large/006tKfTcgy1fcsq696nh4j305h07saai.jpg" alt=""><br><a href="https://book.douban.com/subject/10588835/" target="_blank" rel="external">别处生活</a></p>
<p>读这本书的时候，心中莫名的压抑。这本书的作者是晏礼中《生活》月刊资深记者，记者的职业素养决定了：文字中不能夹杂自己的主观情感，更多应该站在客观的立场上描述人物，故事，场景。</p>
<p>过于真实的东西，总是那么刺骨。春季在老家过年，听到了一些荒诞不经的事情，有个远方亲戚，姑且叫二舅。二舅来家里喝茶，说到儿子年前和他要了5000块钱给小孙子看病。老爷子本来拿这个钱过年的，这样一来，过年买肉，买新衣服的钱都没有了。二舅，过来和我们家诉苦，聊天得知：他儿子是个独子，好吃懒做，年纪轻轻不出去做工只在镇上干点零工，就这样也挑肥拣瘦，一年下来没什么经济收入。家里的经济支撑全靠二舅种蔬菜大棚。蔬菜大棚，好年景能赚7-8w。紧挣不够慢花，二舅年纪也越来越大了，说不好哪天病倒了，治病的钱都没有了。</p>
<p>这样荒诞的事情在农村还屡见不鲜，最初听这件事，和我读这本书的时候感觉一样压抑。平时在大城市工作生活，以为过上了“公知” “精英”的生活，总是抬头仰望着去生活。但是这个世界就是这么不堪。幸好自己能遇到这样的书，能在自己飘飘然的时候低下“高傲”的头。看看这才是自己真实生活的世界，抬头能仰望天空，低头也得能抚摸大地。这样走的路才踏实。</p>
<p>回想，整本书写了20个故事，大部分都是无奈，平庸的一生。今年要考虑定居的问题，这本书给我深深的提了个醒。不客气的说，老家的荒诞的事情，和书中提到的很多故事，都源于群体的信息闭塞，群体的文化水平不高。我最初想法是能定居在秦皇岛，风景宜人，生活压力几乎没有。我和爱人收入水平还不错，能过上一个很好的生活。但是我恐惧回去之后免不了的世俗化。</p>
<p>不想那么尖酸刻薄的承认，这个社会就是很多不公平，不公平的基础设施，不公平的教育水平，不公平的医疗资源，社会公共资源。但这就是事实，读这本书我强烈的感受到了，读书除了能陶冶性情，提高知识储备，能让自己有尊严的活着，但是读书还有个容易被忽略的属性，能让人更看清这个世界，它本来就有它该有的样子，不是想想和烘托出来。</p>
<p>我曾经想，该如何的活在这个世界上，富有？显赫一方？物欲谁不曾有？为了什么？生带不来，死带不走。想想父辈，我父亲早年在农村做过生意，也走南闯北过，但是和我爷爷比，爷爷的细想和想法还是比父亲更开化，更跟得上潮流，因为爷爷在城市里，每天看电视，看报纸能及时的跟进这个时代的变化。回家能和爷爷聊天的话题就很多，反而和父亲聊的就比较少。</p>
<p>在这个方便我和爱人达成共识，以后无论生活水平怎么样，能让我们，和我们的孩子有更好的教育和持续的学习。度过《人类简史》能直观的感受到无论社会形态如何变化高级知识分子都能在这个社会上有不错的阶层。知识分子如何定义，而学识又是什么？ 我不知道，但是我知道简单粗暴的方法就是，尽自己所能触及最好的教育和持续学习。能给子女最好的遗产，我相信就是这样了，自己一穷二白的走到今天，如果子女能比自己更优秀，还担心他们什么呢？而自己对孩子最大的责任就是负责他们优秀。</p>
<p>这是这本书给我带来如上的思考。简单粗糙。</p>
]]></content>
    
    <summary type="html">
    
      &lt;p&gt;&lt;img src=&quot;http://ww3.sinaimg.cn/large/006tKfTcgy1fcsq696nh4j305h07saai.jpg&quot; alt=&quot;&quot;&gt;&lt;br&gt;&lt;a href=&quot;https://book.douban.com/subject/10588835/
    
    </summary>
    
    
  </entry>
  
  <entry>
    <title>读村上春树《我的职业是小说家》</title>
    <link href="http://yoursite.com/2017/02/10/%E8%AF%BB%E6%9D%91%E4%B8%8A%E6%98%A5%E6%A0%91%E3%80%8A%E6%88%91%E7%9A%84%E8%81%8C%E4%B8%9A%E6%98%AF%E5%B0%8F%E8%AF%B4%E5%AE%B6%E3%80%8B/"/>
    <id>http://yoursite.com/2017/02/10/读村上春树《我的职业是小说家》/</id>
    <published>2017-02-10T13:57:22.000Z</published>
    <updated>2017-02-10T13:59:12.000Z</updated>
    
    <content type="html"><![CDATA[<p><img src="http://ww2.sinaimg.cn/large/006tNbRwgy1fchmp778vvj308f0c6js6.jpg" alt=""><br>豆瓣： <a href="https://book.douban.com/subject/26889236/" target="_blank" rel="external">我的职业是小说家 (豆瓣)</a></p>
<p>年后收心去北京工作，在路上读完这本书。读村上君的书，如沐春风，他的文字有种特别的温柔。和村上君“聊”了三个来小时，如同老者对面而谈，他的“絮絮叨叨”引人入胜。</p>
<p>关于村上的写作，没有所谓的成功，或者获奖无数，对于他来说不过是35年来坚持做同一件事。我的职业是程序员，村上君的十二章肺腑之言，让我有很多职业自己的反省。</p>
<p>村上君，提到“epiphany” ，一次看棒球的奇遇经历，让他有了“某一天，什么东西突如其来地闪现在眼前，于是万事为之面目一变”的感觉。引用书评：</p>
<blockquote>
<p>透过村上的经历，我更认同了一个道理：支撑着一个人把一件事做好的，并不是瞬间的激情、突生的勇气和咬牙的努力，而是找准最舒适的节奏，然后以恒久的耐心和从容的态度，去一点一滴地稳步向前推进。<br>不忘初心者，岁月终成诗。  </p>
</blockquote>
<p>“不忘初心者，岁月终成诗”，多美好的文字，通往梦想的路，孤寂，冰冷，彷徨，几个字能给梦想坚持者内心多大慰藉。</p>
<p><img src="http://ww2.sinaimg.cn/large/006tNbRwgy1fchn98ha9ij30go08gq3r.jpg" alt=""><br><img src="http://ww4.sinaimg.cn/large/006tNbRwgy1fchn9pst9bj30go08g0tz.jpg" alt=""></p>
<p>比起小说村上君有着独树一帜的人格魅力，佩服他活得明白，为之“文学奖”的想法赞叹不已，他不是不想获奖是对获奖这件事无所谓。何为无所谓？就是明天以后没有还记得谁的了什么奖，但是好的作品能在百年之后，还被人们津津乐道。</p>
<p><img src="http://ww3.sinaimg.cn/large/006tNbRwgy1fchn7holuoj30n00zkgoa.jpg" alt=""><br>他定是个有趣的老头，身为程序员的我，应该学习村上君的“不挑食”，知乎上有人也发问：我度过很多书，但是我不记得怎么办？答主曰：你吃过的饭，不也是记不住么？但是精神食粮已经成为自己思想的一部分。村上君的“饥不择食”让大脑去过滤。日常在编程学习中也会挑食，但是人应该去食五谷。多去读读，开拓自己视野。</p>
<p><img src="http://ww4.sinaimg.cn/large/006tNbRwgy1fchnnev6ofj30n00zkacg.jpg" alt=""><br>送给焦虑的自己：当自己还犹豫学什么？自己信心不足担心技术被淘汰或者跟不上技术发展… 看村上君的文字，坚定自己学习CS基础知识，去学习那些对工作“无用”的技术。其实在考驾照之后自己学习的心态上也有转变：学习其实有趣的经历。胡适曾经也说过：</p>
<blockquote>
<p>怕什么真理无穷,进一寸有一寸的欢喜。  </p>
<p>我已经六十二岁了，还不知道我究竟学什么。都是东摸摸，西摸摸，也许以后我还要学学水利工程亦未可知。虽则我现在头发都白了，还是无所专长，一无所成。可是我一生很快乐，因为我没有依社会需要的标准去学时髦。我服从了自己的个性，根据个人的兴趣所在去做。到现在虽然一无所成，但是我生活得很快乐  </p>
</blockquote>
<p>梁启超家书，写给梁思成：</p>
<blockquote>
<p>我是学问趣味方面极多的人，我之所以不能专积有成者在此，然而我的生活内容，异常丰富，能够永久保持不厌不倦的精神，亦未始不在此。我每历若干时候，趣味转过新方面，便觉得像换个新生命，如朝旭升天，如新荷出水，我自觉这种生活是极可爱的，极有价值的。我虽不愿你们学我那泛滥无归的短处，但最少也想你们参采我那烂漫向荣的长处。<br>与君共勉</p>
</blockquote>
<p>如村上君所说：凭时间赢来的东西，时间肯定会为之作证。<br>回应上文：不忘初心者，岁月终成诗。</p>
<p><img src="http://ww1.sinaimg.cn/large/006tNbRwgy1fchovs8kyoj30mi0zk41a.jpg" alt=""><br><img src="http://ww4.sinaimg.cn/large/006tNbRwgy1fchp41h5rnj30my0zk0vn.jpg" alt=""></p>
<p>最后贴出也是最燃的，送给每个程序吧，为自己的好技术，修炼个好的容器。</p>
]]></content>
    
    <summary type="html">
    
      &lt;p&gt;&lt;img src=&quot;http://ww2.sinaimg.cn/large/006tNbRwgy1fchmp778vvj308f0c6js6.jpg&quot; alt=&quot;&quot;&gt;&lt;br&gt;豆瓣： &lt;a href=&quot;https://book.douban.com/subject/26889
    
    </summary>
    
    
  </entry>
  
  <entry>
    <title>《鸟哥的私房菜》读书笔记(一)</title>
    <link href="http://yoursite.com/2017/02/10/%E3%80%8A%E9%B8%9F%E5%93%A5%E7%9A%84%E7%A7%81%E6%88%BF%E8%8F%9C%E3%80%8B%E8%AF%BB%E4%B9%A6%E7%AC%94%E8%AE%B0-%E4%B8%80/"/>
    <id>http://yoursite.com/2017/02/10/《鸟哥的私房菜》读书笔记-一/</id>
    <published>2017-02-10T13:54:50.000Z</published>
    <updated>2017-02-10T13:56:23.000Z</updated>
    
    <content type="html"><![CDATA[<h2 id="1-文件的类型与权限"><a href="#1-文件的类型与权限" class="headerlink" title="1. 文件的类型与权限"></a>1. 文件的类型与权限</h2><p>命令行输入<code>ls -al</code><br><figure class="highlight plain"><table><tr><td class="gutter"><pre><div class="line">1</div><div class="line">2</div><div class="line">3</div><div class="line">4</div><div class="line">5</div><div class="line">6</div><div class="line">7</div><div class="line">8</div><div class="line">9</div><div class="line">10</div></pre></td><td class="code"><pre><div class="line">root@ubuntu-512mb-nyc1-01:~# ls -al</div><div class="line">total 28</div><div class="line">drwx------  4 root root 4096 Feb  9 00:34 .</div><div class="line">drwxr-xr-x 23 root root 4096 Feb  9 00:31 ..</div><div class="line">-rw-------  1 root root   10 Feb  9 00:34 .bash_history</div><div class="line">-rw-r--r--  1 root root 3106 Oct 22  2015 .bashrc</div><div class="line">drwx------  2 root root 4096 Feb  9 00:33 .cache</div><div class="line">-rw-r--r--  1 root root    0 Feb  9 00:31 .cloud-locale-test.skip</div><div class="line">-rw-r--r--  1 root root  148 Aug 17  2015 .profile</div><div class="line">drwx------  2 root root 4096 Feb  9 00:31 .ssh</div></pre></td></tr></table></figure></p>
<p><img src="http://ww3.sinaimg.cn/large/006tNc79gy1fcjxxsb3bij30o704kwfb.jpg" alt=""></p>
<p><img src="http://ww4.sinaimg.cn/large/006y8lVagy1fcjzdox825j308l04t74m.jpg" alt=""></p>
<h3 id="第一个字符代表这个文件的类型-如目录、文件或链接文件等等-："><a href="#第一个字符代表这个文件的类型-如目录、文件或链接文件等等-：" class="headerlink" title="第一个字符代表这个文件的类型(如目录、文件或链接文件等等)："></a>第一个字符代表这个文件的类型(如目录、文件或链接文件等等)：</h3><ul>
<li>当为[ d ]则是目录</li>
<li>当为[ - ]则是文件</li>
<li>若是[ l ]则表示为连结档(link file)；</li>
<li>若是[ b ]则表示为装置文件里面的可供储存的接口设备(可随机存取装置)；</li>
<li>若是[ c ]则表示为装置文件里面的串行端口设备,例如键盘、鼠标(一次性读取装置)</li>
</ul>
<h3 id="接下来的字符中-以三个为一组-且均为「rwx」-的三个参数的组合"><a href="#接下来的字符中-以三个为一组-且均为「rwx」-的三个参数的组合" class="headerlink" title="接下来的字符中,以三个为一组,且均为「rwx」 的三个参数的组合"></a>接下来的字符中,以三个为一组,且均为「rwx」 的三个参数的组合</h3><p> [ r ]代表可读(read)、[ w ]代表可写(write)、[ x ]代表可执行(execute) 要注意的是,这三个权限的位置不会改变,如果没有权限,就会出现减号[ - ]</p>
<ul>
<li>第一组为『文件拥有者的权限』</li>
<li>第二组为『同群组的权限』</li>
<li>第三组为『其他非本群组的权限』</li>
</ul>
<h3 id="以-rw-r-r-为例"><a href="#以-rw-r-r-为例" class="headerlink" title="以-rw-r--r--为例:"></a>以<code>-rw-r--r--</code>为例:</h3><ul>
<li><code>-</code> 表示是个文件</li>
<li><code>rw-</code>  当前用户 可读可写不可执行</li>
<li><code>r--</code>  用户所在用户组 可读 不可写 不可执行</li>
<li><code>r--</code>  其他用户  可读 不可写 不可执行</li>
</ul>
<h2 id="2-如何修改文件的属性和权限"><a href="#2-如何修改文件的属性和权限" class="headerlink" title="2. 如何修改文件的属性和权限"></a>2. 如何修改文件的属性和权限</h2><p><strong>记住三个命令：</strong></p>
<ol>
<li><strong>chgrp</strong>：改变用户所在用户组</li>
<li><strong>chown</strong>:  改变文件所有者</li>
<li><strong>chmod</strong>： 改变文件的权限</li>
</ol>
<h3 id="chgrp-命令"><a href="#chgrp-命令" class="headerlink" title="chgrp 命令"></a>chgrp 命令</h3><figure class="highlight bash"><table><tr><td class="gutter"><pre><div class="line">1</div></pre></td><td class="code"><pre><div class="line">chgrp [-R] dirname/filename ...</div></pre></td></tr></table></figure>
<p>[-R] : 递归修改，即该目录下所有文件</p>
<h3 id="chown-命令"><a href="#chown-命令" class="headerlink" title="chown 命令"></a>chown 命令</h3><figure class="highlight bash"><table><tr><td class="gutter"><pre><div class="line">1</div><div class="line">2</div><div class="line">3</div></pre></td><td class="code"><pre><div class="line">chgrp [-R] 账号名 文件或者目录</div><div class="line">chgrp [-R] 账号名:组名 文件或者目录</div><div class="line">chgrp [-R] 账号名.组名 文件或者目录</div></pre></td></tr></table></figure>
<p>账号名.组名  如果账号名中有点会造成误判 比如Yun.kou.group  建议用 冒号</p>
<h3 id="chmod-命令"><a href="#chmod-命令" class="headerlink" title="chmod 命令"></a>chmod 命令</h3><p>Linux中用九位三组来表示文件的权限<br>三组：own ，group， other<br>权限：read， write，execute（rwx）<br>如果没有对应的权限用-代替<br>rwx正好和可以用二进制表示，有权限记1 没有记0<br>-rwxrwxrwx 对应 -[111][111][111]三位转成十进制 为 -777<br>这样就可以用数字来改变文件的权限<br><figure class="highlight bash"><table><tr><td class="gutter"><pre><div class="line">1</div></pre></td><td class="code"><pre><div class="line">chmod [-R] 644 dirname/filename ...</div></pre></td></tr></table></figure></p>
<p>644 每个数位转成二进制数 110100100 再转成rwx模式，rw-r—r—</p>
<p><strong>有几个例子加强记忆</strong><br>-rw——- (600) 只有所有者才有读和写的权限<br>-rw-r–r– (644) 只有所有者才有读和写的权限，组群和其他人只有读的权限<br>-rwx—— (700) 只有所有者才有读，写，执行的权限<br>-rwxr-xr-x (755) 只有所有者才有读，写，执行的权限，组群和其他人只有读和执行的权限<br>-rwx–x–x (711) 只有所有者才有读，写，执行的权限，组群和其他人只有执行的权限<br>-rw-rw-rw- (666) 每个人都有读写的权限<br>-rwxrwxrwx (777) 每个人都有读写和执行的权限</p>
<h3 id="chmod-也可以制定修改"><a href="#chmod-也可以制定修改" class="headerlink" title="chmod 也可以制定修改"></a>chmod 也可以制定修改</h3><p><img src="http://ww1.sinaimg.cn/large/006y8lVagy1fclph7t81vj30jp06twf1.jpg" alt=""></p>
<p><code>u</code> 代表当前用户<br><code>g</code> 代表所在群组<br><code>o</code> 表示其他用户<br><code>a</code> 表示所有</p>
<p><code>+</code>  表示增加权限<br><code>-</code>  表示删除权限<br><code>=</code>  表示赋值权限</p>
<p>具体用法<br><figure class="highlight bash"><table><tr><td class="gutter"><pre><div class="line">1</div><div class="line">2</div><div class="line">3</div><div class="line">4</div><div class="line">5</div><div class="line">6</div><div class="line">7</div></pre></td><td class="code"><pre><div class="line">chmod [-R] u=rwx,g=rx,o=r dirname/filename ...</div><div class="line">ls -al dirname/filename ...</div><div class="line">-rwxr-xr--  ...</div><div class="line">chmod [-R] a+w dirname/filename ...</div><div class="line">-rwxrwxrw- ...</div><div class="line">chmod [-R] a-x dirname/filename ...</div><div class="line">-rw-rw-rw- ...</div></pre></td></tr></table></figure></p>
<p><code>=</code>  赋值将影响 rwx 的值 而 <code>-</code>  <code>+</code>  只改变修改值 对其他没有影响</p>
]]></content>
    
    <summary type="html">
    
      &lt;h2 id=&quot;1-文件的类型与权限&quot;&gt;&lt;a href=&quot;#1-文件的类型与权限&quot; class=&quot;headerlink&quot; title=&quot;1. 文件的类型与权限&quot;&gt;&lt;/a&gt;1. 文件的类型与权限&lt;/h2&gt;&lt;p&gt;命令行输入&lt;code&gt;ls -al&lt;/code&gt;&lt;br&gt;&lt;figure 
    
    </summary>
    
    
  </entry>
  
  <entry>
    <title>im项目回顾</title>
    <link href="http://yoursite.com/2017/01/27/im%E9%A1%B9%E7%9B%AE%E5%9B%9E%E9%A1%BE/"/>
    <id>http://yoursite.com/2017/01/27/im项目回顾/</id>
    <published>2017-01-27T14:23:11.000Z</published>
    <updated>2017-01-27T15:14:25.000Z</updated>
    
    <content type="html"><![CDATA[<p>年前有幸和其他几个优秀的同事一起开发完成im项目开发。im项目在公司所有产品线中是功能最少但是细节多开发难度大。一方面来自于产品形态属于富交互，第二点来自优秀作品的比较：比如钉钉，微信，QQ等等。往往一个看似平常的功能，实现起来要多端配合，难度的跨度比较大。</p>
<p>先看效果： 线上地址 <a href="https://im.clouderwork.com" target="_blank" rel="external">https://im.clouderwork.com</a></p>
<p>im项目虽然历经坎坷，单回头看也很精彩其中有很多可圈可点之处，不方便一一道来，随手拿出几个经典的场景浅析下使用的方案，希望有所交流和帮助</p>
<h3 id="Contenteditable-Vs-Textarea"><a href="#Contenteditable-Vs-Textarea" class="headerlink" title="Contenteditable Vs Textarea"></a>Contenteditable Vs Textarea</h3><p><img src="https://ww4.sinaimg.cn/large/006y8lValy1fc5ka37xufj30rp0khwfi.jpg" alt=""></p>
<p>发消息的输入框可以有两种方案：</p>
<p><strong>方案1:</strong> 使用div contenteditable </p>
<p><strong>方案2:</strong> 使用textarea</p>
<p>分析下两种方案的利弊：<strong>方案1</strong>  可以插入任意标签，对于im 多个标签就可以干很多事，比如标记@的信息，展示表情。项目初期我们使用的此方案，美中不足不兼容其他端，也就是前端可以随意展示html 但是安卓端和ios端不能在消息体中带有html标签  <strong>方案2:</strong> 是纯 字符串解决方案，兼容其他端，变成了操作字符串。相应的表情不能展示成图片，只能<code>[开心]</code>这样展示。几经沟通最后确定还是采用了方案2</p>
<p>下面分享下方案2的难点</p>
<p>如果是方案1 我们可以@人的时候 加入一个<code>span</code> 标签 <code>&lt;span contenteditable=&quot;false&quot; data-id=&#39;xxxxx&#39;&gt;@路飞&lt;/span&gt;</code> 这样我们解析的时候非常好解析，还有个问题，单我们删除@的人的时候 是整个@路飞一起删除，而不是一个个字删除。</p>
<p>在纯字符串中去解决这个问题就不好解决了。顺带还有一些其他问题比如：键盘左右键，经过 @路飞的时候要跳过去，不能停留在 @路飞 之间，不能破坏@的结构。 鼠标单击要让光标落在 @路飞 的前面或者后面。</p>
<p>该功能参照钉钉客户端的实现。</p>
<p>为了更好的交流，我把代码也开源出来，希望能有更好的解决方案。体验效果：<a href="http://kouyun.me/Vue-textarea/" target="_blank" rel="external">http://kouyun.me/Vue-textarea/</a></p>
<p><a href="https://github.com/Yunkou/Vue-textarea/tree/gh-pages" target="_blank" rel="external">https://github.com/Yunkou/Vue-textarea/tree/gh-pages</a> 代码在此</p>
<p><img src="https://ww1.sinaimg.cn/large/006y8lValy1fc5kuup220j30fv0fyt9f.jpg" alt=""></p>
<p>说下大概的思路：</p>
<p>整个操作都是在计算光标和字符串index 的关系。会维护一个数组存储@的信息，记录这个@开始的位置，结束的位置和一些特征信息比如id。</p>
<p>核心代码：</p>
<figure class="highlight javascript"><table><tr><td class="gutter"><pre><div class="line">1</div><div class="line">2</div><div class="line">3</div><div class="line">4</div><div class="line">5</div><div class="line">6</div><div class="line">7</div><div class="line">8</div><div class="line">9</div></pre></td><td class="code"><pre><div class="line"><span class="keyword">const</span> REX = <span class="regexp">/\s@\S+\s/g</span></div><div class="line"><span class="keyword">let</span> arr</div><div class="line"><span class="keyword">let</span> posArr = []</div><div class="line"><span class="keyword">while</span> ((arr = REX.exec(val)) !== <span class="literal">null</span>) &#123;</div><div class="line"><span class="keyword">let</span> pos = &#123;</div><div class="line">  <span class="attr">start</span>: arr.index,</div><div class="line">  <span class="attr">end</span>: REX.lastIndex</div><div class="line">&#125;</div><div class="line">posArr.push(pos)</div></pre></td></tr></table></figure>
<p>利用正则对象exec 方法 不断迭代。找到开始点和结束点。</p>
<p>单其他相关操作的时候，遍历光标是否在这个区间内，一旦进入这个区间立即给予相应的处理。</p>
<p>第二个难点textarea 是没法拿到光标的坐标<br>这里比较绕，不是光标的位置 index，而是定位 fixed position 也就是相对页面位置。这个该如何计算，一直是个难点，这个问题用来解决，手动输入@的时候，正确的在光标定位处出现 @的人员列表。光标是无法计算的。后来想了一个代理布局的方式，即在 textarea 下方 用一个pre标签来模拟 textarea 标签布局。当textarea监听到输入@（修饰键50且shift修饰键值为true），在pre光标处（字符串index）插入 空span标签。然后用dom树找到插入的空span标签计算出位置，并映射到textarea正确的位置。</p>
<p>核心代码：</p>
<figure class="highlight javascript"><table><tr><td class="gutter"><pre><div class="line">1</div><div class="line">2</div><div class="line">3</div><div class="line">4</div><div class="line">5</div><div class="line">6</div><div class="line">7</div><div class="line">8</div><div class="line">9</div><div class="line">10</div><div class="line">11</div><div class="line">12</div><div class="line">13</div><div class="line">14</div><div class="line">15</div><div class="line">16</div><div class="line">17</div></pre></td><td class="code"><pre><div class="line"><span class="keyword">if</span> (!e.shiftKey) &#123; <span class="keyword">return</span> &#125;</div><div class="line"><span class="keyword">let</span> index = <span class="built_in">document</span>.querySelector(<span class="string">'textarea'</span>).selectionStart</div><div class="line"><span class="keyword">let</span> tmpStr = <span class="keyword">this</span>.textValue</div><div class="line"><span class="keyword">let</span> pre = <span class="built_in">document</span>.querySelector(<span class="string">'.textarea'</span>)</div><div class="line">pre.innerHTML = tmpStr.substring(<span class="number">0</span>, index) + <span class="string">'&lt;span&gt;&lt;/span&gt;'</span> + tmpStr.substring(index, tmpStr.length)</div><div class="line"><span class="keyword">let</span> span = pre.querySelector(<span class="string">'span'</span>)</div><div class="line"><span class="keyword">let</span> left = span.offsetLeft - pre.offsetLeft</div><div class="line"><span class="keyword">let</span> bottom = <span class="number">150</span> - (span.offsetTop - pre.offsetTop)</div><div class="line"><span class="comment">// 小于0时根据滚动高度来计算位置</span></div><div class="line"><span class="keyword">if</span> (bottom &lt; <span class="number">0</span>) &#123;</div><div class="line">  <span class="keyword">let</span> scrollHeight = pre.scrollHeight</div><div class="line">  bottom = scrollHeight - <span class="number">10</span> - (span.offsetTop - pre.offsetTop)</div><div class="line">&#125;</div><div class="line"><span class="keyword">this</span>.atListPos = &#123;</div><div class="line">  <span class="attr">left</span>: left + <span class="number">10</span> + <span class="string">'px'</span>,</div><div class="line">  <span class="attr">bottom</span>: bottom + <span class="string">'px'</span></div><div class="line">&#125;</div></pre></td></tr></table></figure>
<p>im可以说是技术的一个无底洞，处理的技术细节特别多，随着慢慢的打磨越来越喜欢上这个项目，大胆实践，谨慎求证。</p>
<p>文写于2017除夕夜，祝自己和朋友亲人新年快乐。</p>
]]></content>
    
    <summary type="html">
    
      &lt;p&gt;年前有幸和其他几个优秀的同事一起开发完成im项目开发。im项目在公司所有产品线中是功能最少但是细节多开发难度大。一方面来自于产品形态属于富交互，第二点来自优秀作品的比较：比如钉钉，微信，QQ等等。往往一个看似平常的功能，实现起来要多端配合，难度的跨度比较大。&lt;/p&gt;
&lt;p&gt;
    
    </summary>
    
    
  </entry>
  
  <entry>
    <title>Algorithm in Javascript Quick Sort</title>
    <link href="http://yoursite.com/2016/12/23/algorithm-in-javascript-quick-sort/"/>
    <id>http://yoursite.com/2016/12/23/algorithm-in-javascript-quick-sort/</id>
    <published>2016-12-23T15:08:34.000Z</published>
    <updated>2016-12-23T15:15:00.000Z</updated>
    
    <content type="html"><![CDATA[<p><img src="http://ww2.sinaimg.cn/large/006tNbRwjw1fas33vep7zj312w0pxjve.jpg" alt=""></p>
<p>桶排序快但是内存消耗大<br>冒泡排序节省内存但是排序速度慢<br>今天主角是 快速排序，快速排序和前面两种算法比较既不浪费空间又可以快一点排序。快速排序也是使用最广泛的排序算法</p>
<h2 id="快速排序"><a href="#快速排序" class="headerlink" title="快速排序"></a>快速排序</h2><p><a href="http://www.cs.usfca.edu/~galles/visualization/ComparisonSort.html" target="_blank" rel="external">Comparison Sorting Visualization</a> 点击链接 点Quick Sort 按钮<br>快排，理解起来比较“麻烦”点, 见图示<br><img src="http://ww2.sinaimg.cn/large/006y8lVagw1fb13gcutbtj30ko0qh77q.jpg" alt=""></p>
<ol>
<li>随便找个数作为基数 图为7</li>
<li>从两边开始找，左边负责找比基数大的数，找到停止，右边找到比基数小的数停止</li>
<li>把两个找到的数交换位置，重复2 直到左右相遇</li>
<li>这时候，基数归位，这时候数列分成两个数列，左边比基数小，右边比基数大。</li>
<li>分别在两个数列重复1-4</li>
</ol>
<p>在排序算法中遇到了“二分”这个思想，二分会在以后的学习中遇到。</p>
<h2 id="代码实现"><a href="#代码实现" class="headerlink" title="代码实现"></a>代码实现</h2><figure class="highlight javascript"><table><tr><td class="gutter"><pre><div class="line">1</div><div class="line">2</div><div class="line">3</div><div class="line">4</div><div class="line">5</div><div class="line">6</div><div class="line">7</div><div class="line">8</div><div class="line">9</div><div class="line">10</div><div class="line">11</div><div class="line">12</div><div class="line">13</div><div class="line">14</div><div class="line">15</div><div class="line">16</div><div class="line">17</div><div class="line">18</div><div class="line">19</div></pre></td><td class="code"><pre><div class="line"><span class="function"><span class="keyword">function</span> <span class="title">quicksort</span>(<span class="params">arr</span>) </span>&#123;</div><div class="line">	<span class="comment">//if array is empty</span></div><div class="line">	<span class="keyword">if</span> (arr.length === <span class="number">0</span>) &#123; <span class="keyword">return</span> [] &#125;</div><div class="line">	</div><div class="line">	<span class="keyword">var</span> left = [];</div><div class="line">	<span class="keyword">var</span> right = [];</div><div class="line">  <span class="keyword">var</span> pivot = arr[<span class="number">0</span>];</div><div class="line">  </div><div class="line">	<span class="comment">//go through each element in array</span></div><div class="line">  <span class="keyword">for</span> (<span class="keyword">var</span> i = <span class="number">1</span>; i &lt; arr.length; i++) &#123;</div><div class="line">  	  <span class="keyword">if</span> (arr[i] &lt; pivot) &#123;</div><div class="line">      left.push(arr[i]);</div><div class="line">    &#125; <span class="keyword">else</span> &#123;</div><div class="line">      right.push(arr[i]);</div><div class="line">    &#125;</div><div class="line">  &#125;</div><div class="line"></div><div class="line">  <span class="keyword">return</span> quicksort(left).concat(pivot, quicksort(right));</div><div class="line">&#125;</div></pre></td></tr></table></figure>
<h2 id="学习算法中遇到的好玩的东西"><a href="#学习算法中遇到的好玩的东西" class="headerlink" title="学习算法中遇到的好玩的东西"></a>学习算法中遇到的好玩的东西</h2><ol>
<li>推荐一本书讲算法的生动有趣《 <a href="https://book.douban.com/subject/25894685/" target="_blank" rel="external">啊哈!算法</a> 》我开始学习算法就是在这本书开始的，这本书算法的描述是c语言 。如果对c语言有遗忘推荐作者的另一本书《 <a href="https://book.douban.com/subject/25716079/" target="_blank" rel="external">啊哈C！思考快你一步</a> 》</li>
<li><a href="http://jsdo.it/norahiko/oxIy/fullscreen" target="_blank" rel="external">又一个排序算法可视化的网站</a></li>
<li><a href="http://www.ruanyifeng.com/blog/2011/04/quicksort_in_javascript.html" target="_blank" rel="external">快速排序（Quicksort）的Javascript实现</a></li>
<li><a href="https://antjanus.com/blog/web-development-tutorials/understanding-quicksort-js-native-implementation/" target="_blank" rel="external">Understanding Quicksort, and taking advantage of JS’s native implementation - AntJanus</a></li>
</ol>
]]></content>
    
    <summary type="html">
    
      &lt;p&gt;&lt;img src=&quot;http://ww2.sinaimg.cn/large/006tNbRwjw1fas33vep7zj312w0pxjve.jpg&quot; alt=&quot;&quot;&gt;&lt;/p&gt;
&lt;p&gt;桶排序快但是内存消耗大&lt;br&gt;冒泡排序节省内存但是排序速度慢&lt;br&gt;今天主角是 快速排序，快
    
    </summary>
    
    
  </entry>
  
  <entry>
    <title>Algorithm in Javascript Bubble Sort</title>
    <link href="http://yoursite.com/2016/12/16/algorithm-in-javascript-bubble-sort/"/>
    <id>http://yoursite.com/2016/12/16/algorithm-in-javascript-bubble-sort/</id>
    <published>2016-12-15T19:15:46.000Z</published>
    <updated>2016-12-15T19:16:37.000Z</updated>
    
    <content type="html"><![CDATA[<p><img src="http://ww3.sinaimg.cn/large/006tNbRwjw1fas0m8g5lvj312w0pxafw.jpg" alt=""></p>
<h2 id="冒泡排序"><a href="#冒泡排序" class="headerlink" title="冒泡排序"></a>冒泡排序</h2><p><strong>理解：</strong><br>冒泡排序算法的流程如下：</p>
<ol>
<li>比较相邻的元素。 如果第一个比第二个大，就交换他们两个。</li>
<li>对每一对相邻元素作同样的工作，从开始第一对到结尾的最后一对。 在这一点，最后的元素应该会是最大的数。</li>
<li>针对所有的元素重复以上的步骤，除了最后一个。</li>
<li>持续每次对越来越少的元素重复上面的步骤，直到没有任何一对数字需要比较。</li>
</ol>
<p><strong>核心思想：</strong><br>比较两个相邻位置如果位置错误就交换<br><strong>图解：</strong><br><img src="http://ww1.sinaimg.cn/large/006tNbRwgw1fas2iv4y2qj30rg0dfwgq.jpg" alt=""><br><img src="http://ww2.sinaimg.cn/large/006tNbRwgw1fas0uvzokxg307s06lgo0.gif" alt=""></p>
<p><a href="http://www.cs.usfca.edu/~galles/visualization/ComparisonSort.html" target="_blank" rel="external">Comparison Sorting Visualization</a>点击链接后选择Bubble Sort</p>
<p><strong>代码实现：</strong><br><figure class="highlight javascript"><table><tr><td class="gutter"><pre><div class="line">1</div><div class="line">2</div><div class="line">3</div><div class="line">4</div><div class="line">5</div><div class="line">6</div><div class="line">7</div><div class="line">8</div><div class="line">9</div><div class="line">10</div><div class="line">11</div><div class="line">12</div><div class="line">13</div><div class="line">14</div><div class="line">15</div></pre></td><td class="code"><pre><div class="line"><span class="function"><span class="keyword">function</span> <span class="title">bubbleSort</span> (<span class="params">arr</span>) </span>&#123;</div><div class="line">  <span class="keyword">let</span> len = arr.length</div><div class="line">  <span class="comment">// 通过交换每次选出最大的放大哦最后，排到第二位时候一次交换完成，</span></div><div class="line">  <span class="comment">// 所以排多少次是固定的 len - 1</span></div><div class="line">  <span class="keyword">for</span> (<span class="keyword">let</span> i = <span class="number">1</span>; i &lt; len; i++) &#123;</div><div class="line">    <span class="comment">// 每次把最大的数推到最后，最后排序已经固定了，没有必要再排</span></div><div class="line">    <span class="keyword">for</span> (<span class="keyword">let</span> j = <span class="number">1</span>; j &lt;= len - i; j++) &#123;</div><div class="line">      <span class="keyword">if</span> (arr[j] &lt; arr[j - <span class="number">1</span>]) &#123;</div><div class="line">        [arr[j], arr[j - <span class="number">1</span>]] = [arr[j - <span class="number">1</span>], arr[j]]</div><div class="line">      &#125;</div><div class="line">    &#125;</div><div class="line">  &#125;</div><div class="line">  <span class="keyword">return</span> arr</div><div class="line">&#125;</div><div class="line"><span class="built_in">console</span>.log(bubbleSort([<span class="number">1</span>,<span class="number">3</span>,<span class="number">9</span>,<span class="number">8</span>,<span class="number">7</span>,<span class="number">2</span>]))</div></pre></td></tr></table></figure></p>
<h2 id="番外篇"><a href="#番外篇" class="headerlink" title="番外篇"></a>番外篇</h2><p>学习算法遇遇到的好的资料<br>一个不错的博客 <a href="http://bubkoo.com/" target="_blank" rel="external">http://bubkoo.com/</a><br>算法可视化的网站<a href="http://www.cs.usfca.edu/~galles/visualization/Algorithms.html" target="_blank" rel="external">Data Structure Visualization</a></p>
]]></content>
    
    <summary type="html">
    
      &lt;p&gt;&lt;img src=&quot;http://ww3.sinaimg.cn/large/006tNbRwjw1fas0m8g5lvj312w0pxafw.jpg&quot; alt=&quot;&quot;&gt;&lt;/p&gt;
&lt;h2 id=&quot;冒泡排序&quot;&gt;&lt;a href=&quot;#冒泡排序&quot; class=&quot;headerlink&quot; 
    
    </summary>
    
    
  </entry>
  
  <entry>
    <title>Algorithm in Javascript Bucket Sort</title>
    <link href="http://yoursite.com/2016/12/16/algorithm-in-javascript-bucket-sort/"/>
    <id>http://yoursite.com/2016/12/16/algorithm-in-javascript-bucket-sort/</id>
    <published>2016-12-15T17:43:44.000Z</published>
    <updated>2016-12-15T19:13:49.000Z</updated>
    
    <content type="html"><![CDATA[<p><img src="http://ww2.sinaimg.cn/large/006tNbRwgw1fary7i72nij312w0pxn0c.jpg" alt=""></p>
<p>我怎么又去研究算法了呢？自己不是根正苗红CS专业，基础差，亡羊补牢，填充数据结构方面的空白，学习过程遇到有趣的算法就记录下来。<br>常见算法，多为 c  c++ python 所描述，为方便，尝试转成日常所用javascript 才疏学浅，如有写的不当之处，不吝赐教。🙏🙏🙏🙏</p>
<h2 id="桶排序"><a href="#桶排序" class="headerlink" title="桶排序"></a>桶排序</h2><p><strong>代码实现：</strong><br><figure class="highlight javascript"><table><tr><td class="gutter"><pre><div class="line">1</div><div class="line">2</div><div class="line">3</div><div class="line">4</div><div class="line">5</div><div class="line">6</div><div class="line">7</div><div class="line">8</div><div class="line">9</div><div class="line">10</div><div class="line">11</div><div class="line">12</div><div class="line">13</div><div class="line">14</div><div class="line">15</div><div class="line">16</div><div class="line">17</div><div class="line">18</div><div class="line">19</div><div class="line">20</div></pre></td><td class="code"><pre><div class="line"><span class="function"><span class="keyword">function</span> <span class="title">bucketSort</span> (<span class="params">arr</span>) </span>&#123;</div><div class="line">  <span class="comment">// 假设我们排序的范围为0-10 那么我们准备11个桶来放这些数字</span></div><div class="line">  <span class="keyword">let</span> buckets = <span class="keyword">new</span> <span class="built_in">Array</span>(<span class="number">11</span>).fill(<span class="number">0</span>)</div><div class="line">  <span class="keyword">let</span> newArr = []</div><div class="line"></div><div class="line">  <span class="comment">// 装桶</span></div><div class="line">  arr.forEach(<span class="function"><span class="params">val</span> =&gt;</span> &#123; buckets[val]++ &#125;)</div><div class="line"></div><div class="line">  buckets.forEach(<span class="function">(<span class="params">val, index</span>) =&gt;</span> &#123;</div><div class="line">    <span class="keyword">for</span> (<span class="keyword">let</span> i = <span class="number">1</span>; i &lt;= val; i++) &#123;</div><div class="line">      newArr.push(index)</div><div class="line">    &#125;</div><div class="line">  &#125;)</div><div class="line"></div><div class="line">  <span class="keyword">return</span> newArr</div><div class="line">&#125;</div><div class="line"></div><div class="line"><span class="built_in">console</span>.log(bucketSort([<span class="number">5</span>, <span class="number">3</span>, <span class="number">5</span>, <span class="number">2</span>, <span class="number">8</span>]))</div><div class="line"><span class="built_in">console</span>.log(bucketSort([<span class="number">1</span>, <span class="number">3</span>, <span class="number">9</span>, <span class="number">8</span>, <span class="number">7</span>, <span class="number">2</span>]))</div><div class="line"><span class="built_in">console</span>.log(bucketSort([<span class="number">3</span>, <span class="number">5</span>, <span class="number">2</span>, <span class="number">7</span>, <span class="number">9</span>, <span class="number">2</span>, <span class="number">5</span>]))</div></pre></td></tr></table></figure></p>
<p><strong>图解：</strong><br><img src="http://ww2.sinaimg.cn/large/006tNbRwjw1farztois5yj30iy0cowfe.jpg" alt=""></p>
<p><img src="http://ww3.sinaimg.cn/large/006tNbRwjw1farzs9q4mvj30gm05174u.jpg" alt=""></p>
<p><strong>理解：</strong></p>
<blockquote>
<p>桶排序 (Bucket sort)或所谓的箱排序的原理是将数组分到有限数量的桶子里，然后对每个桶子再分别排序（有可能再使用别的排序算法或是以递归方式继续使用桶排序进行排序），最后将各个桶中的数据有序的合并起来。</p>
</blockquote>
<ol>
<li>根据数列最大值设置桶数量</li>
<li>把数据放到对应的桶里</li>
<li>循环输出不为空桶里面的数据，计数多少输出多少次</li>
</ol>
<p>桶排序动画演示： <a href="http://www.cs.usfca.edu/~galles/visualization/BucketSort.html" target="_blank" rel="external">Bucket Sort Visualization</a><br><strong>特点：</strong></p>
<ol>
<li>桶排序是稳定的</li>
<li>桶排序是常见排序里最快的一种,比快排还要快…大多数情况下</li>
<li>桶排序非常快,但是同时也非常耗空间,基本上是最耗空间的一种排序算法</li>
</ol>
<h2 id="参考资料"><a href="#参考资料" class="headerlink" title="参考资料"></a>参考资料</h2><ol>
<li><a href="http://bubkoo.com/2014/01/15/sort-algorithm/bucket-sort/" target="_blank" rel="external">常见排序算法 - 桶排序 (Bucket Sort) </a></li>
</ol>
]]></content>
    
    <summary type="html">
    
      &lt;p&gt;&lt;img src=&quot;http://ww2.sinaimg.cn/large/006tNbRwgw1fary7i72nij312w0pxn0c.jpg&quot; alt=&quot;&quot;&gt;&lt;/p&gt;
&lt;p&gt;我怎么又去研究算法了呢？自己不是根正苗红CS专业，基础差，亡羊补牢，填充数据结构方面的空白，
    
    </summary>
    
    
  </entry>
  
  <entry>
    <title> 利用sketch插件优化前端工作</title>
    <link href="http://yoursite.com/2016/12/09/%E5%88%A9%E7%94%A8sketch%E6%8F%92%E4%BB%B6%E4%BC%98%E5%8C%96%E5%89%8D%E7%AB%AF%E5%B7%A5%E4%BD%9C/"/>
    <id>http://yoursite.com/2016/12/09/利用sketch插件优化前端工作/</id>
    <published>2016-12-08T16:15:53.000Z</published>
    <updated>2016-12-08T16:17:11.000Z</updated>
    
    <content type="html"><![CDATA[<p><img src="http://ww3.sinaimg.cn/large/006y8lVajw1fajsqq033ij30q00etq4s.jpg" alt=""><br>Sketch 已经是现在GUI设计师标配，至于其是如何取代ps 成为UI设计师新宠本文不赘述，本文只探索Sketch 对于 前端工程师的福利</p>
<h2 id="从前端工程师切图的几大痛点说起"><a href="#从前端工程师切图的几大痛点说起" class="headerlink" title="从前端工程师切图的几大痛点说起"></a>从前端工程师切图的几大痛点说起</h2><p>前端工程师长期以来饱受PSD迫害：</p>
<ol>
<li>PSD 文档巨大 60p 轻松上G，工作内网小水管瞬间拥堵</li>
<li>艺术家PSD不分层，颜色信息在图层样式里。各种高级蒙版。</li>
<li>粘贴复制文字</li>
<li>量间距，算行高。</li>
<li>写阴影效果</li>
<li>圆角</li>
<li>切icon</li>
<li>…</li>
</ol>
<h2 id="直到我遇到了，Sketch和Marketch"><a href="#直到我遇到了，Sketch和Marketch" class="headerlink" title="直到我遇到了，Sketch和Marketch"></a>直到我遇到了，Sketch和Marketch</h2><p>可以在 <a href="http://tudou527.github.io/marketch/" target="_blank" rel="external">http://tudou527.github.io/marketch/</a> 体验（官网以app为例不好，Marketch更适用web 开发，App开发有更好的工具替代）</p>
<p>Sketch可以在其官网购买，购买安装好之后，可以下载 <a href="http://sketchtoolbox.com/" target="_blank" rel="external">Sketch Toolbox</a> ，用于管理和安装sketch插件<br><img src="http://ww3.sinaimg.cn/large/006y8lVajw1fajtoqqfm9g30kv0e3wgl.gif" alt=""></p>
<p>与sketch 设计稿保持相同的目录结构，随意点个页面<br><img src="http://ww1.sinaimg.cn/large/006y8lVajw1fajttjgp4xj30i30kx0vv.jpg" alt=""></p>
<p><strong>前方高能</strong><br><img src="http://ww1.sinaimg.cn/large/006y8lVagw1fajtyd1ha0g313h0j51l0.gif" alt=""><br>几乎解决了前端工程师的很多痛点 标注间距 内容点击复制 css 也已经准备好 ，前端工程师写UI可以，写大布局，然后细节复制样式在代码中调整就可以出页面了。效率不知道高多少倍。</p>
<p>再看切图<br><img src="http://ww4.sinaimg.cn/large/65e4f1e6gw1faju4wp6zug20vt0i47wi.gif" alt=""></p>
<h2 id="总结"><a href="#总结" class="headerlink" title="总结"></a>总结</h2><p>合理的使用工具能大大的提高工作效率，少加点班，多陪陪家人。</p>
]]></content>
    
    <summary type="html">
    
      &lt;p&gt;&lt;img src=&quot;http://ww3.sinaimg.cn/large/006y8lVajw1fajsqq033ij30q00etq4s.jpg&quot; alt=&quot;&quot;&gt;&lt;br&gt;Sketch 已经是现在GUI设计师标配，至于其是如何取代ps 成为UI设计师新宠本文不赘述，本文只
    
    </summary>
    
    
  </entry>
  
  <entry>
    <title> 知识收集整理与分享</title>
    <link href="http://yoursite.com/2016/12/08/%E7%9F%A5%E8%AF%86%E6%94%B6%E9%9B%86%E6%95%B4%E7%90%86%E4%B8%8E%E5%88%86%E4%BA%AB/"/>
    <id>http://yoursite.com/2016/12/08/知识收集整理与分享/</id>
    <published>2016-12-08T15:08:58.000Z</published>
    <updated>2016-12-08T15:15:14.000Z</updated>
    
    <content type="html"><![CDATA[<p><img src="http://ww4.sinaimg.cn/large/006y8lVajw1fajsgv8datj30nw0fx400.jpg" alt=""></p>
<h2 id="知识的收集"><a href="#知识的收集" class="headerlink" title="知识的收集"></a>知识的收集</h2><p>Pocket： 网页零散收集<br>微博：分享到印象笔记<br>知乎收藏夹： 收藏知乎精彩回答<br>Chrome： 收藏夹<br>掘金App：技术社区收藏<br>Reed： rss订阅</p>
<h2 id="知识整理"><a href="#知识整理" class="headerlink" title="知识整理"></a>知识整理</h2><p>印象笔记：粗略 整理知识<br>Bear：知识精细输出</p>
<h2 id="知识分享传播"><a href="#知识分享传播" class="headerlink" title="知识分享传播"></a>知识分享传播</h2><p>个人博客：稳定长期输出<br>掘金社区：社区交流分享<br>知乎社区：社区交流分享</p>
]]></content>
    
    <summary type="html">
    
      &lt;p&gt;&lt;img src=&quot;http://ww4.sinaimg.cn/large/006y8lVajw1fajsgv8datj30nw0fx400.jpg&quot; alt=&quot;&quot;&gt;&lt;/p&gt;
&lt;h2 id=&quot;知识的收集&quot;&gt;&lt;a href=&quot;#知识的收集&quot; class=&quot;headerlink
    
    </summary>
    
    
  </entry>
  
  <entry>
    <title>命令行备忘录</title>
    <link href="http://yoursite.com/2016/11/28/%E5%91%BD%E4%BB%A4%E8%A1%8C%E5%A4%87%E5%BF%98%E5%BD%95/"/>
    <id>http://yoursite.com/2016/11/28/命令行备忘录/</id>
    <published>2016-11-28T12:48:18.000Z</published>
    <updated>2016-11-28T12:58:50.000Z</updated>
    
    <content type="html"><![CDATA[<p><img src="http://ww3.sinaimg.cn/large/006y8lVagw1fa83zqjjr2j31kw11yqs4.jpg" alt=""></p>
<h3 id="1-一行命令执行多个命令"><a href="#1-一行命令执行多个命令" class="headerlink" title="1. 一行命令执行多个命令"></a>1. 一行命令执行多个命令</h3><p>三个连接符<code>;</code>  <code>&amp;&amp;</code>  <code>||</code></p>
<p><strong>区别：</strong></p>
<ol>
<li><code>;</code>  如果被分号(;)所分隔的命令会连续的执行下去，就算是错误的命令也会继续执行后面的命令。</li>
<li><code>&amp;&amp;</code> 如果命令被 &amp;&amp; 所分隔，那么命令也会一直执行下去，但是中间有错误的命令存在就不会执行后面的命令，没错就直行至完为止。</li>
<li><code>||</code>如果每个命令被双竖线 || 所分隔，那么一遇到可以执行成功的命令就会停止执行后面的命令，而不管后面的命令是否正确与否。如果执行到错误的命令就是继续执行后一个命令，一直执行到遇到正确的命令为止。</li>
</ol>
<figure class="highlight sh"><table><tr><td class="gutter"><pre><div class="line">1</div></pre></td><td class="code"><pre><div class="line">mkdir <span class="built_in">test</span> &amp;&amp; touch <span class="built_in">test</span>/main.test.js</div></pre></td></tr></table></figure>
<h3 id="2-编辑命令"><a href="#2-编辑命令" class="headerlink" title="2. 编辑命令"></a>2. 编辑命令</h3><ul>
<li>Control + a ：移到命令行首</li>
<li>Control + e ：移到命令行尾</li>
<li>Control + f ：按字符前移（右向）</li>
<li>Control + b ：按字符后移（左向）</li>
<li>Option  + f ：按单词前移（右向）</li>
<li>Option  + b ：按单词后移（左向）</li>
<li>Control + xx：在命令行首和光标之间移动</li>
<li>Control + u ：从光标处删除至命令行首</li>
<li>Control + k ：从光标处删除至命令行尾</li>
<li>Control + w ：从光标处删除至字首</li>
<li>Option  + d ：从光标处删除至字尾</li>
<li>Control + d ：删除光标处的字符</li>
<li>Control + h ：删除光标前的字符</li>
<li>Control + y ：粘贴至光标后</li>
<li>Option  + c ：从光标处更改为首字母大写的单词</li>
<li>Option  + u ：从光标处更改为全部大写的单词</li>
<li>Option  + l ：从光标处更改为全部小写的单词</li>
<li>Control + t ：交换光标处和之前的字符</li>
<li>Option  + t ：交换光标处和之前的单词</li>
</ul>
]]></content>
    
    <summary type="html">
    
      &lt;p&gt;&lt;img src=&quot;http://ww3.sinaimg.cn/large/006y8lVagw1fa83zqjjr2j31kw11yqs4.jpg&quot; alt=&quot;&quot;&gt;&lt;/p&gt;
&lt;h3 id=&quot;1-一行命令执行多个命令&quot;&gt;&lt;a href=&quot;#1-一行命令执行多个命令&quot; cla
    
    </summary>
    
    
  </entry>
  
  <entry>
    <title>工程师如何规划自己的职业生涯</title>
    <link href="http://yoursite.com/2016/11/26/%E5%B7%A5%E7%A8%8B%E5%B8%88%E5%A6%82%E4%BD%95%E8%A7%84%E5%88%92%E8%87%AA%E5%B7%B1%E7%9A%84%E8%81%8C%E4%B8%9A%E7%94%9F%E6%B6%AF/"/>
    <id>http://yoursite.com/2016/11/26/工程师如何规划自己的职业生涯/</id>
    <published>2016-11-25T18:28:57.000Z</published>
    <updated>2016-11-25T18:32:24.000Z</updated>
    
    <content type="html"><![CDATA[<p><img src="http://ww1.sinaimg.cn/large/006y8lVagw1fa4wvmagq5j30q40hfgq3.jpg" alt=""></p>
<blockquote>
<p>全文为<a href="https://www.zhihu.com/lives/772768188231340032" target="_blank" rel="external">工程师如何规划自己的职业生涯</a> 学习笔记，结合了部分自己的想法。推荐付费听课。</p>
</blockquote>
<h3 id="1-工程师职级体系"><a href="#1-工程师职级体系" class="headerlink" title="1 工程师职级体系"></a>1 工程师职级体系</h3><p>参考谷歌工程师职级体系</p>
<ul>
<li>Software Engineer II    硕士毕业</li>
<li>Software Engineer III   博士毕业</li>
<li>Senior Software Engineer</li>
<li>Staff Engineer  分水岭</li>
<li>Senior Staff Engineer</li>
<li>Principal Engineer   架构师</li>
<li>Distinguished Engineer  杰出贡献</li>
<li>Google Fellow  终身荣誉 VP</li>
<li>Google Senior Fellow    </li>
</ul>
<p><strong>Software Engineer I II III</strong></p>
<p>google招聘很少招本科生， 硕士毕业 一般为Software Engineer II ， 对应博士毕业为Software Engineer III</p>
<p><strong>Staff Engineer</strong></p>
<p>绝大部分google 的工程师停留在这个层级。层级要求，有自己的想法，找到一个有价值的方向，提出自己的建议，把这个建议实现为一个工程项目，并把它实现出来，得到广泛的使用。要有一个很好的结果：提升了团队的开发体验或者用户的使用体验，增加公司的收入。不仅仅要技术过硬，还要有好的想法，并对项目负责。比如给自己的项目指定时间表，制定目标和OKR，负责这个项目的完成。</p>
<p><strong>Senior Staff Engineer</strong></p>
<p>必须要有更高的专业技能，必须吧更有难度的系统完成。从Staff级别开始要有很强的判断力，不能总是要别人告诉你完成什么任务，从领导和上级领任务，要自己发现问题并解决掉。</p>
<p><strong>Staff Engineer</strong> </p>
<p>晋升难度比较大，也是工程师比较光荣的事情。一旦晋升到此级别，工程师的名字就会被贴到公司的网页上去。</p>
<p><strong>Principal Engineer</strong></p>
<p>要在业内有领先的水平，和代表性的结果。此级别在google是非常少的，少于1%。</p>
<p><strong>Distinguished Engineer</strong></p>
<p>杰出工程师：需要对公司作出特别大的贡献，比如极大的提高了用户体验，或者广告系统的变现能力</p>
<p><strong>Google Fellow</strong> </p>
<p>终身荣誉：必须在公司和业界做成长远深刻的成绩</p>
<p><strong>Google Senior Fellow</strong></p>
<p>高级副总裁：为互联网战神Jeff Dean 设立的岗位 <a href="http://www.slate.com/articles/technology/doers/2013/01/jeff_dean_facts_how_a_google_programmer_became_the_chuck_norris_of_the_internet.single.html" target="_blank" rel="external">How Google’s Jeff Dean became the Chuck Norris of the Internet.</a></p>
<blockquote>
<p>豆瓣网友总结：<a href="https://www.douban.com/note/424873819/" target="_blank" rel="external">外企的职级等级制度</a></p>
</blockquote>
<p>刚入门的工程师：需要了解基本的数据结构，算法，操作系统，数据库，面向对象编程等常用的理论知识。之后拓展深度和广度。</p>
<p>初级的工程师：工作1-2年的工程师，能够独立完成开发任务，通过熟练使用开发工具，编程语言，理解基本的业务逻辑。能够抽象的建模，并且熟悉测试，代码发布，性能分析，修改bug，版本管理等工作。</p>
<p>技术骨干：带领项目的能力，参与制定代码规范、开发的流程，非常熟悉常用的技术框架，和算法的原理，需要有更强的解决问题的能力，需要了解在不同的场景下如何技术选型。</p>
<p>技术专家：必须对一个或者多个技术领域有更深的理解。能过独立设计和实现解决复杂的技术问题。比如设计一个新的工具，新的算法，新的系统框架。</p>
<h3 id="2-判断是否可以晋升的评判标准"><a href="#2-判断是否可以晋升的评判标准" class="headerlink" title="2 判断是否可以晋升的评判标准"></a>2 判断是否可以晋升的评判标准</h3><p>需要考察的四个维度</p>
<ol>
<li>专业知识和经验的沉淀和积累</li>
<li>项目的规模和难度</li>
<li>执行力和项目的结果</li>
<li>领导力（其他同事的认同和信服，面对问题的有正确可靠的解决方案和协调内外资源的能力）</li>
</ol>
<h3 id="3-为晋升做的准备"><a href="#3-为晋升做的准备" class="headerlink" title="3 为晋升做的准备"></a>3 为晋升做的准备</h3><p>从四个维度出发考量自己是否具有下个职级所具备的能力。通过事实来证明自己的能力。</p>
<p>以项目的规模和难度为例，如果发现证明不了自己做的项目有规模和难度的，不要被动的等待，要主动的和上级沟通，争取一些。能证明自己可以胜任更大规模和更高难度的项目</p>
<p>专业知识和经验 从一开始对项目的熟悉，到熟练操作。到能知道别人，协调资源负责项目树立自己在技术团队的威信力，再到自己在业界有一定的影响力。</p>
<h3 id="4-程序员变成管理者会面临哪些改变"><a href="#4-程序员变成管理者会面临哪些改变" class="headerlink" title="4 程序员变成管理者会面临哪些改变"></a>4 程序员变成管理者会面临哪些改变</h3><p>从Developer转到Manager给人产生一种”晋升”的错觉。这导致太多人，其实并不是因为想做管理，只是因为作为senior工程师，似乎没有其他上升通道。喜欢做管理的人做了管理者可以不断学习和提高管理技巧。而不喜欢又不懂管理的管理者，会成为公司员工离职的主要原因。 很多工程师关注技术问题的解决，然而有时候是团队之间的沟通交流和协作出了问题。如何规范workflow，如何与团队协作达到1+1&gt;2，真正区分了一个人的side project和工程中使用的大项目。不论是敏捷开发，TDD，scrum，等等，都是为此而生。 把管理当做和技术岗位一样严肃的”技能”。People skill是一种比较soft的技能，但是并不代表毫无经验的任何人都可以凭天分混下去。学习并且练习如何做管理，和每个合作的人建立信任； 好的技术leader需要过硬的技术背景和强大的同理心，能够理解和感知他人，并且给予指导和帮助他人成长。</p>
<p>重要的一点：还要做好向上管理，培养上级对自己信任，让团队做更有难度，更有挑战的项目来证明，要在上级那为团队打造品牌。</p>
<h3 id="5-选择大公司还是创业公司"><a href="#5-选择大公司还是创业公司" class="headerlink" title="5 选择大公司还是创业公司"></a>5 选择大公司还是创业公司</h3><p>大公司和创业公司工程师文化的异同？如何结合自己的特质，来做一个适合自己的选择。</p>
<p>在创业公司工作呢，需要一种挽起袖子什么都要干的精神。就像你要个造个房子，到创业公司你会发现铲子什么工具都没有，那怎么办呢？自怨自哀是没有用的。你自己动手去创造。在创业公司，有一种成就感，来自造物和随产品一起成长的幸福感。</p>
<p>在大公司就不会有工具不齐全的问题。大公司的系统相对比较成熟和完善。对工程师来讲工作的，一个优点就是能够了解到成熟的系统工具是什么样的啊，而且他能够很快的进入一个高效率的开发状态，弊端呢就是在一个成熟的环境下面把一个现有的系统推倒再重来的机会就非常非常少了。在大公司工作，很可能你只是庞大系统的一个很细小的分支，Tiger举例的google 的搜索系统中，一个非常小的分支的推荐系统。每个人能够负责的范围也有很大的局限性。</p>
<p>创业公司是把产品从零做到六七十分的工作，大公司是从90分做到95分这样的。个人参与就是1分甚至零点几分的。</p>
<h3 id="6-程序员是不是青春饭"><a href="#6-程序员是不是青春饭" class="headerlink" title="6 程序员是不是青春饭"></a>6 程序员是不是青春饭</h3><p>这是一个大家都很关心的问题，答案可能让大家失望了。既然我们从事了互联网，这个行业，那就必须要接受这个残酷的现实：就是必须，不停地学习给自己充电积累，才能够在这样的一个环境下把幸存下来，不被淘汰，因为这个行业实在太快了。可能现在遇到很难的问题，在未来的几年，就是很基础的常识。回想大学在学校里学习和研究的内容，现在都不实用了。Tiger 在博士期间研究的是低带宽下面的网络性能优化，但是现在手机弱网络，都要比那个时代的更好了。</p>
<p>现在工程上解决不了的问题，在过几年，新的技术出现了或者硬件解决了现在的难题，发现现有积累的经验已经不再是优势了。</p>
<p>再看前端，在04-08年左右你可能在这个阶段积累了很多浏览器兼容性的问题。转眼到14-16年发现浏览器兼容好像没那么重要了。再比如我们曾经风靡一时的网页三剑客。现在入行的人可能都没听说过了。</p>
<p>另有一种说法，程序员转做管理，这个想法在传统的软件公司，还是可以的。但是在互联网公司，纯粹的管理者完全不懂技术是没有生存空间的。作为一个合格的技术管理者，需要了解哪些是适合团队的技术选型。你要能给你的团队提出有深度的技术解决方案。</p>
<p>所以我们做工程师就要接受这样一个现实，因为技术的发展日新月异，所以我们必须要活到老，要有很强的学习的欲望和好奇心。这不是年龄的问题，这是态度的问题。只要你愿意学习，这口青春饭也可以一直吃到老。</p>
<h3 id="7-国内互联网公司的优势与如如何选择"><a href="#7-国内互联网公司的优势与如如何选择" class="headerlink" title="7 国内互联网公司的优势与如如何选择"></a>7 国内互联网公司的优势与如如何选择</h3><p>对比硅谷，国内的互联网气氛还是比较浮躁的。但是依然止不住，国内互联网发展的趋势，无论从双十一还是从去年如火如荼的o2o 大战，国内的互联网依附人口红利，还是不断的上升增长的趋势。在社交，电商，移动支付，智能硬件，大数据这些领域里面，中国互联网公司优势会越来越强，在这些领域中国互联网公司会引领潮流的。</p>
<p>而判断一个公司的前景需要从一下几点考量：模式、方向、壁垒、团队。作为工程师来讲是否是一家技术驱动产品的公司。</p>
]]></content>
    
    <summary type="html">
    
      &lt;p&gt;&lt;img src=&quot;http://ww1.sinaimg.cn/large/006y8lVagw1fa4wvmagq5j30q40hfgq3.jpg&quot; alt=&quot;&quot;&gt;&lt;/p&gt;
&lt;blockquote&gt;
&lt;p&gt;全文为&lt;a href=&quot;https://www.zhihu.com
    
    </summary>
    
    
  </entry>
  
  <entry>
    <title>正则表达式学习笔记</title>
    <link href="http://yoursite.com/2016/11/18/%E6%AD%A3%E5%88%99%E8%A1%A8%E8%BE%BE%E5%BC%8F%E5%AD%A6%E4%B9%A0%E7%AC%94%E8%AE%B0/"/>
    <id>http://yoursite.com/2016/11/18/正则表达式学习笔记/</id>
    <published>2016-11-17T18:45:04.000Z</published>
    <updated>2016-11-17T18:59:18.000Z</updated>
    
    <content type="html"><![CDATA[<p><img src="http://ww3.sinaimg.cn/large/006y8mN6jw1f9voxp4qb9j312w0kkthh.jpg" alt=""></p>
<p>正则表达式对于我来说一直像黑暗魔法一样的存在。手机正则去网上搜，邮箱正则去网上搜，复杂点的看看文档拼凑一下，再复杂只能厚着脸皮让其他同事给写一个。从来没有系统的学习过，今天准备拿下它。</p>
<h3 id="1-学习目标："><a href="#1-学习目标：" class="headerlink" title="1. 学习目标："></a>1. 学习目标：</h3><ol>
<li>了解正则表达式语法</li>
<li>在IDE中使用正则表达式</li>
<li>在javascript 中使用正则表达式处理字符串</li>
</ol>
<h3 id="2-什么是正则表达式"><a href="#2-什么是正则表达式" class="headerlink" title="2. 什么是正则表达式"></a>2. 什么是正则表达式</h3><blockquote>
<p><strong>正则表达式</strong>，又称<strong>正规表示式</strong>、<strong>正规表示法、正规表达式、规则表达式、常规表示法</strong>（英语：Regular Expression，在代码中常简写为regex、regexp或RE），计算机科学的一个概念。正则表达式使用单个字符串来描述、匹配一系列匹配某个句法规则的字符串。在很多文本编辑器里，正则表达式通常被用来检索、替换那些匹配某个模式的文本。</p>
</blockquote>
<p>通俗的讲就是按照某种<strong>规则</strong>去匹配符合条件的字符串</p>
<h3 id="3-利用图形化工具理解正则表达式"><a href="#3-利用图形化工具理解正则表达式" class="headerlink" title="3.利用图形化工具理解正则表达式"></a>3.利用图形化工具理解正则表达式</h3><p>辅助理解正则表达的在线工具 <a href="https://regexper.com/" target="_blank" rel="external">https://regexper.com/</a>  我们利用这个工具辅助理解，正则表达式。语法没懂表着急，后面会有，这里只是学会用工具帮助我们学习。</p>
<h5 id="手机号正则"><a href="#手机号正则" class="headerlink" title="手机号正则"></a>手机号正则</h5><p><code>/^1[34578][0-9]{9}$/</code></p>
<p><img src="http://ww1.sinaimg.cn/large/006tNc79gw1f9feibz42aj30ag04omxa.jpg" alt="手机号正则表达式"></p>
<p><strong>注释：</strong>以1开头，第二位为3 4 5 7 9 其中一个，以9位（本身1次加重复8次）0-9数字结尾</p>
<h5 id="单词边界"><a href="#单词边界" class="headerlink" title="单词边界"></a>单词边界</h5><p><code>/\bis\b/</code></p>
<p><img src="http://ww3.sinaimg.cn/large/006tNc79gw1f9fn3312uwj307g014q2v.jpg" alt=""></p>
<p><strong>注释：</strong> is前后都是单词的边界，比较晦涩难懂？感受下两者的区别，<code>\b</code> 会方道语法部分讲解</p>
<p><img src="http://ww2.sinaimg.cn/large/006tNc79gw1f9fn7b5qdnj308x04maab.jpg" alt=""></p>
<p><img src="http://ww2.sinaimg.cn/large/006tNc79gw1f9fn8rqa5gj308702hgln.jpg" alt=""></p>
<h5 id="URL分组替换"><a href="#URL分组替换" class="headerlink" title="URL分组替换"></a>URL分组替换</h5><p><code>/http:(\/\/.+\.jpg)/</code></p>
<p>看不懂的不要慌语法部分后面会有介绍，这里只是展示利用可视化的图形帮助我们理解正则表达式，可以回来再看木有关系</p>
<p><img src="http://ww4.sinaimg.cn/large/006tNc79gw1f9fngh1zj0j30890253yj.jpg" alt=""></p>
<p>正则表达式中括号用来分组，这个时候我们可以通过用<code>$1</code>来获取 group#1的内容</p>
<p><img src="http://ww4.sinaimg.cn/large/006tNc79gw1f9fnjun2tlj30bq02kmxd.jpg" alt=""></p>
<p>说下这个正则的意义，如果网站用了https，网站引用静态资源也必须是https，否则报错。如果写成 <code>//</code> 会自动识别 http 或者 https</p>
<h5 id="日期匹配与分组替换"><a href="#日期匹配与分组替换" class="headerlink" title="日期匹配与分组替换"></a>日期匹配与分组替换</h5><p><code>/^\d{4}[/-]\d{2}[/-]\d{2}$/</code></p>
<p><img src="http://ww3.sinaimg.cn/large/006tNc79gw1f9fnup4jbjj30dg02haa8.jpg" alt=""></p>
<p>这个正则比较复杂，画符念咒的地方太多了，一一分析：</p>
<ol>
<li>Start of line 是由<code>^</code>生效的表示以此开头</li>
<li>对应结尾End of line 由<code>$</code>生效表示以此结尾</li>
<li>接着看digit 由 <code>\d</code> 生效表示数字</li>
<li>3times 由<code>{4}</code> 生效表示重复4次，开始的时候有疑问，为什么不是  4times 。后来明白作者的用意，正则表达式是一个规则，用这个规则去从字符串开始匹配到结束（注意计算机读字符串可是不会分行的，都是一个串，我们看到的多行，人家会认为是个 <code>\t</code> ）这里设计好像小火车的轨道一直开到末尾。digit 传过一次，3times表示再来三次循环，共4次，后面的once同理。  自己被自己啰嗦到了。</li>
<li>接下来，是 one of 在手机正则里面已经出现了。表示什么都行。只要符合这两个都让通过。</li>
</ol>
<p>好了这个正则解释完了，接下来用它做什么呢？</p>
<p><img src="http://ww4.sinaimg.cn/large/006tNc79gw1f9foah7a4xj309h051wes.jpg" alt=""></p>
<p>我们可以验证日期的合法性</p>
<p>结合URL分组替换所用到的分组特性，我们可以轻松写出日期格式化的方法</p>
<p>改造下这个正则</p>
<p><code>/^(\d{4})[/-](\d{2})[/-](\d{2})$/</code></p>
<p><img src="http://ww3.sinaimg.cn/large/006tNc79gw1f9fodttjmgj30f302xgly.jpg" alt=""></p>
<p>轻松的可以拿到 group#1 #2 #3 的内容，对应 <code>$1</code> <code>$2</code> <code>$3</code></p>
<p><img src="http://ww4.sinaimg.cn/large/006tNc79gw1f9fok05dhbj30as0550t8.jpg" alt=""></p>
<p>到现在已经能结合图形化工具看懂正则表达式表达式了，如果想自己写，还要在正则语法上下点功夫</p>
<h3 id="4-Js中Regexp对象"><a href="#4-Js中Regexp对象" class="headerlink" title="4. Js中Regexp对象"></a>4. Js中Regexp对象</h3><p>Javascript 通过内置对象RegExp支持正则表达式，有两种方法实例化RegExp对象</p>
<h5 id="字面量方法"><a href="#字面量方法" class="headerlink" title="字面量方法"></a>字面量方法</h5><p><code>const reg =/\bis\b/g</code></p>
<h5 id="构造函数"><a href="#构造函数" class="headerlink" title="构造函数"></a>构造函数</h5><p><code>const reg = new RegExp(&#39;\\bis\\b&#39;, &#39;g&#39;)</code></p>
<p><em>注意：第一个参数为正则表达式字符串（注意转译），第二个参数为修饰符，修饰符g代表全局搜索，后面会有详细介绍。</em></p>
<h3 id="5-正则表达式语法"><a href="#5-正则表达式语法" class="headerlink" title="5. 正则表达式语法"></a>5. 正则表达式语法</h3><h5 id="1-修饰符-（三个-g-i-m）"><a href="#1-修饰符-（三个-g-i-m）" class="headerlink" title="1 修饰符 （三个 g i m）"></a>1 修饰符 （三个 g i m）</h5><p>修饰符与其他语法特殊，字面量方法声名的时候放到<code>//</code>后，构造函数声明的时候，作为第二个参数传入。整个正则表达式可以理解为正则表达式规则字符串+修饰符</p>
<ul>
<li>g：global 执行一个全局匹配</li>
<li>i：ignore case执行一个不区分大小写的匹配</li>
<li>m: multiple lines多行匹配</li>
</ul>
<p>修饰符可以一起用 <code>const reg =/\bis\b/gim</code></p>
<p>来说说他们有什么作用</p>
<h6 id="有g和没有g的区别"><a href="#有g和没有g的区别" class="headerlink" title="有g和没有g的区别"></a>有g和没有g的区别</h6><p><img src="http://ww1.sinaimg.cn/large/006tNc79gw1f9fp5k6qqsj30ez05kmxu.jpg" alt=""></p>
<p>没有g只替换了第一个，有g 所有的都换了</p>
<p><img src="http://ww3.sinaimg.cn/large/006tNc79gw1f9fp7cneolj307h01jt8p.jpg" alt=""></p>
<h6 id="有i和没有i的区别"><a href="#有i和没有i的区别" class="headerlink" title="有i和没有i的区别"></a>有i和没有i的区别</h6><p><img src="http://ww1.sinaimg.cn/large/006tNc79gw1f9fpapzyxfj30a505j74p.jpg" alt=""></p>
<p>有i忽略大小写，没有i严格区分大小写</p>
<p><img src="http://ww4.sinaimg.cn/large/006tNc79gw1f9fpbyofj7j307l01nt8q.jpg" alt=""></p>
<h5 id="2-元字符"><a href="#2-元字符" class="headerlink" title="2 元字符"></a>2 元字符</h5><p>正则表达式由两种基本字符组成：</p>
<ul>
<li>原义字符</li>
<li>非打印字符</li>
<li>元字符 (* + ? $ ^ . | \ ( ) { } [ ])</li>
</ul>
<h5 id="3-原义字符"><a href="#3-原义字符" class="headerlink" title="3. 原义字符"></a>3. 原义字符</h5><p>这个没什么好解释的，我们一直在举例的 /is/ 匹配字符串’is’</p>
<p><code>\</code>将下一个字符标记为一个特殊字符、或一个原义字符、或一个向后引用、或一个八进制转义符。例如，<code>n</code>”匹配字符“<code>n</code>”。“<code>\n</code>”匹配一个换行符。序列“<code>\\</code>”匹配“<code>\</code>”而“<code>\(</code>”则匹配“<code>(</code>”。</p>
<h5 id="4-非打印字符"><a href="#4-非打印字符" class="headerlink" title="4. 非打印字符"></a>4. 非打印字符</h5><table>
<thead>
<tr>
<th>字符</th>
<th>描述</th>
</tr>
</thead>
<tbody>
<tr>
<td><code>\cx</code></td>
<td>匹配由x指明的控制字符。例如， \cM 匹配一个 Control-M 或回车符。x 的值必须为 A-Z 或 a-z 之一。否则，将 c 视为一个原义的 ‘c’ 字符。</td>
</tr>
<tr>
<td><code>\f</code></td>
<td>匹配一个换页符。等价于 \x0c 和 \cL。</td>
</tr>
<tr>
<td><code>\n</code></td>
<td>匹配一个换行符。等价于 \x0a 和 \cJ。</td>
</tr>
<tr>
<td><code>\r</code></td>
<td>匹配一个回车符。等价于 \x0d 和 \cM。</td>
</tr>
<tr>
<td><code>\s</code></td>
<td>匹配任何空白字符，包括空格、制表符、换页符等等。等价于 [ \f\n\r\t\v]。</td>
</tr>
<tr>
<td><code>\S</code></td>
<td>匹配任何非空白字符。等价于 [^ \f\n\r\t\v]。</td>
</tr>
<tr>
<td><code>\t</code></td>
<td>匹配一个制表符。等价于 \x09 和 \cI。</td>
</tr>
<tr>
<td><code>\v</code></td>
<td>匹配一个垂直制表符。等价于 \x0b 和 \cK。</td>
</tr>
</tbody>
</table>
<p>非打印字符，以<code>\n</code>为例</p>
<p><img src="http://ww1.sinaimg.cn/large/006tNc79gw1f9fqja7y50j30am05saag.jpg" alt=""></p>
<p>其他的在前端引用比较少，应该在后端处理文本文件的时候会用到</p>
<h5 id="5-字符类"><a href="#5-字符类" class="headerlink" title="5. 字符类 []"></a>5. 字符类 []</h5><p>在前面的手机号正则例子🌰中，我们已经使用过[]  <code>/^1[34578][0-9]{9}$/</code> :  <code>[34578]</code>表示34578任意一个数字即可。在日期匹配与分组替换例子🌰中 <code>/^\d{4}[/-]\d{2}[/-]\d{2}$/</code> 表示符合 <code>／</code>  <code>-</code>  都可以</p>
<p><img src="http://ww2.sinaimg.cn/large/006tNc79gw1f9fr7ak7e1j309002r74d.jpg" alt=""></p>
<h5 id="6-字符类取反"><a href="#6-字符类取反" class="headerlink" title="6. 字符类取反 [^]"></a>6. 字符类取反 [^]</h5><p>表示不属于此类</p>
<p><img src="http://ww3.sinaimg.cn/large/006tNc79jw1f9fra79t56j309202qaa6.jpg" alt=""></p>
<p>空格也不属于，好多狗🐶</p>
<h5 id="7-范围类"><a href="#7-范围类" class="headerlink" title="7. 范围类[-]"></a>7. 范围类[-]</h5><p>正则表达式支持一定范围规则比如 <code>[a-z]</code> <code>[A-Z]</code>  <code>[0-9]</code>  可以连写[a-z0-9] 如果你只是想匹配<code>-</code>在 范围类最后加<code>-</code>即可。请看实例。</p>
<p><img src="http://ww1.sinaimg.cn/large/006tNc79jw1f9frka0ib8j309805hjrs.jpg" alt=""></p>
<h5 id="8-预定义类"><a href="#8-预定义类" class="headerlink" title="8. 预定义类"></a>8. 预定义类</h5><p>常用为了方便书写</p>
<table>
<thead>
<tr>
<th>字符</th>
<th>等价类</th>
<th>含义</th>
</tr>
</thead>
<tbody>
<tr>
<td><code>.</code></td>
<td><code>[^\n\r]</code></td>
<td>除了回车符和换行符之外的所有字符</td>
</tr>
<tr>
<td><code>\d</code></td>
<td><code>[0-9]</code></td>
<td>数字字符</td>
</tr>
<tr>
<td><code>\D</code></td>
<td><code>[^0-9]</code></td>
<td>非数字字符</td>
</tr>
<tr>
<td><code>\s</code></td>
<td><code>[\t\n\x0B\f\r]</code></td>
<td>空白符</td>
</tr>
<tr>
<td><code>\S</code></td>
<td><code>[^\t\n\x0B\f\r]</code></td>
<td>非空白符</td>
</tr>
<tr>
<td><code>\w</code></td>
<td><code>[a-zA-Z_0-9]</code></td>
<td>单词字符（字母、数字、下划线）</td>
</tr>
<tr>
<td><code>\W</code></td>
<td><code>[^a-zA-Z_0-9]</code></td>
<td>非单词字符</td>
</tr>
</tbody>
</table>
<p>有了这些预定义类，写一些正则就很方便了，比如我们希望匹配一个 ab+数字+任意字符 的字符串，就可以这样写了 <code>/ab\d./</code></p>
<p><img src="http://ww2.sinaimg.cn/large/006tNc79gw1f9fs73ic6pj305s00ydfr.jpg" alt=""></p>
<h5 id="9-边界"><a href="#9-边界" class="headerlink" title="9. 边界"></a>9. 边界</h5><table>
<thead>
<tr>
<th>字符</th>
<th>含义</th>
</tr>
</thead>
<tbody>
<tr>
<td><code>^</code></td>
<td>以xx开头</td>
</tr>
<tr>
<td><code>$</code></td>
<td>以xx结尾</td>
</tr>
<tr>
<td><code>\b</code></td>
<td>单词边界，指[a-zA-Z_0-9]之外的字符</td>
</tr>
<tr>
<td><code>\B</code></td>
<td>非单词边界</td>
</tr>
</tbody>
</table>
<p>边界顾名思义即定义匹配的边界条件，上面基本都在前面的例子碰到了，这里演示下<code>\b</code>与<code>\B</code> 的区别</p>
<p><img src="http://ww2.sinaimg.cn/large/006tNc79jw1f9ft3ihicwj308l05fgly.jpg" alt=""></p>
<h5 id="10-量词"><a href="#10-量词" class="headerlink" title="10. 量词"></a>10. 量词</h5><table>
<thead>
<tr>
<th>字符</th>
<th>含义</th>
</tr>
</thead>
<tbody>
<tr>
<td>?</td>
<td>出现零次或一次</td>
</tr>
<tr>
<td>*</td>
<td>出现零次或多次(任意次)</td>
</tr>
<tr>
<td>+</td>
<td>出现一次或多次（至道一次）</td>
</tr>
<tr>
<td>{n}</td>
<td>对应零次或者n次</td>
</tr>
<tr>
<td>{n,m}</td>
<td>至少出现n次但不超过m次</td>
</tr>
<tr>
<td>{n,}</td>
<td>至少出现n次(+的升级版)</td>
</tr>
<tr>
<td>{0,n}</td>
<td>至多出现n次(其实就是{n,m} 方便记忆而已)</td>
</tr>
</tbody>
</table>
<p>如果没有量词，要匹配4位数字这样写就可以<code>/\d\d\d\d/</code>, 如果匹配50位100位呢？那不是要疯掉了？<br>有了量词，就可以这样写<code>/\d{100}/</code>, 量词的使用我们在手机号中使用过，表现在可视化中就是循环多少次。</p>
<p>凑一个上面都包含的实例<code>/\d?@\d*@\d+@\d{10}@\d{10,20}@\d{10,}@\d{0,10}/</code></p>
<p><img src="http://ww2.sinaimg.cn/large/006tNc79gw1f9ftmqn7b6j30ls0210t3.jpg" alt=""></p>
<h5 id="11-贪婪与懒惰（非贪婪）"><a href="#11-贪婪与懒惰（非贪婪）" class="headerlink" title="11.贪婪与懒惰（非贪婪）"></a>11.贪婪与懒惰（非贪婪）</h5><p>正则表达式默认会匹配贪婪模式，什么是贪婪模式呢？如其名尽可能多的匹配。我们看个例子🌰。</p>
<p><code>/\d{3,6}/</code></p>
<p><img src="http://kouyuntuchuang.oss-cn-shanghai.aliyuncs.com/2016-11-17-160139.jpg" alt=""></p>
<p><img src="http://kouyuntuchuang.oss-cn-shanghai.aliyuncs.com/2016-11-17-160337.jpg" alt=""></p>
<p>贪婪模式下，匹配的了最多的情况。</p>
<p>与贪婪对应就是懒惰模式，懒惰对应的就是匹配的尽可能少的情况。如何开启懒惰模式？ 在量词后面加<code>?</code>。继续上面的例子</p>
<p><code>/\d{3,6}?/</code></p>
<p><img src="http://kouyuntuchuang.oss-cn-shanghai.aliyuncs.com/2016-11-17-161114.jpg" alt=""></p>
<p>如果想知道，正则表达式是如何匹配量词的，请看 <a href="https://segmentfault.com/a/1190000000426455" target="_blank" rel="external">进阶正则表达式</a> 文中有介绍，正则是如何回溯的。</p>
<h5 id="12-分组与反向引用"><a href="#12-分组与反向引用" class="headerlink" title="12.分组与反向引用"></a>12.分组与反向引用</h5><p>分组，又称为子表达式。把正则表达式拆分成小表达式。概念枯燥，说个例子为嘛用分组：</p>
<p><strong>不分组 <code>/abc{2}/</code></strong> </p>
<p><img src="http://kouyuntuchuang.oss-cn-shanghai.aliyuncs.com/2016-11-17-162437.jpg" alt=""></p>
<p>量词仅作用到最后的<code>c</code></p>
<p><strong>分组 <code>/(abc){2}/</code></strong></p>
<p><img src="http://kouyuntuchuang.oss-cn-shanghai.aliyuncs.com/2016-11-17-162607.jpg" alt=""></p>
<p>注意这里 group #1 </p>
<p>分组虽然和运算符<code>()</code> 很像，但是分组在正则表达式中，注意理解组的含义。经常有人滥用分组</p>
<p><code>/^(http|https)/</code>   真的需要这样么？其实 <code>/^https?/</code>就可以了，你正则写的特别长的时候，会出现一堆没用的结果，看着都头疼吧。</p>
<p>分组往往和<strong>反向引用</strong>一起使用，别被概念吓到：当一个正则表达式被分组后，每个分组自动被赋予一个组号，一左到右分别是 <code>$1</code>   <code>$2</code>…</p>
<p>再把之前的例子拿出来</p>
<p><code>/^(\d{4})[/-](\d{2})[/-](\d{2})$/</code></p>
<p><img src="http://ww3.sinaimg.cn/large/006y8mN6jw1f9vktmyyf9j30f703eaak.jpg" alt=""></p>
<p>轻松的可以拿到 group#1 #2 #3 的内容，对应 <code>$1</code> <code>$2</code> <code>$3</code></p>
<p> <img src="http://ww4.sinaimg.cn/large/006tNc79gw1f9fok05dhbj30as0550t8.jpg" alt=""></p>
<p>如果在反向引用中不想捕获年该如何操作? 加上 <code>?:</code>即可</p>
<p><code>/^(?:\d{4})[/-](\d{2})[/-](\d{2})$/</code></p>
<p><img src="http://ww2.sinaimg.cn/large/006y8mN6jw1f9vn6qq47jj30eq0320t3.jpg" alt=""></p>
<h5 id="12-前瞻"><a href="#12-前瞻" class="headerlink" title="12.前瞻"></a>12.前瞻</h5><p>⚠️ 这部分为进阶部分—选看</p>
<p>正则表达式中有前瞻（Lookahead）和后顾（Lookbehind）的概念，这两个术语非常形象的描述了正则引擎的匹配行为。需要注意一点，正则表达式中的前和后和我们一般理解的前后有点不同。一段文本，我们一般习惯把文本开头的方向称作“前面”，文本末尾方向称为“后面”。但是对于正则表达式引擎来说，因为它是从文本头部向尾部开始解析的（可以通过正则选项控制解析方向），因此对于文本尾部方向，称为“前”，因为这个时候，正则引擎还没走到那块，而对文本头部方向，则称为“后”，因为正则引擎已经走过了那一块地方。</p>
<p>⚠️注意：后顾性能损耗比较大，js只支持前瞻（知乎上看到的，具体原因不详）</p>
<p>上面的比较概念话，尝试用大白话讲讲，就说皇上选妃吧，先行条件得是美女吧，长得“如花”那样皇上可不要，漂亮这关过了，皇上想要这个美女也不行，皇室有规矩，必须是贵族血统。</p>
<p>那么“漂亮”就是正常的匹配，匹配到了，还得看看家室是不是贵族。”贵族”相当于前瞻条件</p>
<p>前瞻分两种一种是正向前瞻<code>(?=xxx)</code>, 另一种是负向前瞻<code>(?!xxx)</code></p>
<p><img src="http://ww4.sinaimg.cn/large/006y8mN6jw1f9vo59dpl6j30f503ogm5.jpg" alt=""></p>
<p>😂 是不是很简单？那我们来玩个好玩的。</p>
<p>题目：如何将’123456’转成货币带逗号的。’123,456’。这个是很常规格式化金额的需求。</p>
<p>如果在没有学习正则之前，我的思路是：</p>
<ol>
<li>字符串转数组</li>
<li>反转数组</li>
<li>每隔三个添加个逗号</li>
<li>添加完了反转数组</li>
<li>数组转字符串</li>
</ol>
<p>好累～～～</p>
<p>今天学习了正则，可以一步到位 <code>&#39;123456789&#39;.replace(/(\d)(?=(?:\d{3})+$)/g, &#39;$1,&#39;)</code></p>
<p>到此为止正则的基本使用已经结束，后面一篇会分享一些正则的 「奇技淫巧」</p>
]]></content>
    
    <summary type="html">
    
      &lt;p&gt;&lt;img src=&quot;http://ww3.sinaimg.cn/large/006y8mN6jw1f9voxp4qb9j312w0kkthh.jpg&quot; alt=&quot;&quot;&gt;&lt;/p&gt;
&lt;p&gt;正则表达式对于我来说一直像黑暗魔法一样的存在。手机正则去网上搜，邮箱正则去网上搜，复杂点的看
    
    </summary>
    
    
  </entry>
  
  <entry>
    <title>《黑客与画家》读书笔记</title>
    <link href="http://yoursite.com/2016/10/30/%E9%BB%91%E5%AE%A2%E4%B8%8E%E7%94%BB%E5%AE%B6/"/>
    <id>http://yoursite.com/2016/10/30/黑客与画家/</id>
    <published>2016-10-30T07:03:22.000Z</published>
    <updated>2016-10-30T07:04:27.000Z</updated>
    
    <content type="html"><![CDATA[<p><img src="http://ww3.sinaimg.cn/large/72f96cbajw1f9a7xq83mcj20dw0liq5s.jpg" alt=""></p>
<p>豆瓣：<a href="https://book.douban.com/subject/6021440/" target="_blank" rel="external">https://book.douban.com/subject/6021440/</a></p>
<h3 id="1-无意义的语言口水战"><a href="#1-无意义的语言口水战" class="headerlink" title="1 无意义的语言口水战"></a>1 无意义的语言口水战</h3><p>三年前开始读的一本书，今天下午因为有朋友因为长途飞机和我借kindle的时候，才一口气读完。囫囵吞枣之后，有一些自己的想法记录下来。</p>
<p>读过这本书后，相信有很多人会有学lisp的冲动，但作者写这本书的时候，已经今非昔比相信他今天也许会有不一样的结论。在作者的介绍中，能在lisp里面看到很多其他语言的影子。</p>
<p>记得桑大曾经说过，Uber 之所以放弃node 改用 go 是因为node 不适合做计算密集型的业务，相比之下go更擅长。但是朋友圈一疯传会给媒体和没有深入了解的人，放出一个错误的信息。node是不是不行了，是不是应该去学go。</p>
<p>每个语言都是针对特定的使用场景，总去拿自己的优势面和其他的劣势之处比较实在没什么意思。</p>
<p>我会学习lisp么？答案是肯定的——会。为什么呢？打个比方，我喜欢看《冰火》《斯巴达克斯》这样的美剧，但是不影响我去看《青云志》这样电视剧。闲下来，一场说走就走的旅行，拿起一本没有看过豆瓣书评的书，不也是一样有趣的事情。作为一个程序员，了解下古老的语言，或许就能帮自己更了解自己所使用的语言。</p>
<p>但是～ 我不会，用到我的生产环境中…..😂</p>
<h3 id="2-意识到英语重要性"><a href="#2-意识到英语重要性" class="headerlink" title="2 意识到英语重要性"></a>2 意识到英语重要性</h3><p>虽然和这本书内容，没什么关系，但是我试图了解lisp的时候，发现国内的资料少之又少。如果自己能有不错的英语阅读能力，就不会限制我了解这个世界的途径。</p>
<p>你们学习的时候，我出去浪了，出来混的总要还的。这些年吃到了，英语不好的亏。英语不好，你就缺失了与这个世界对话的一扇窗；英语不好，就会让你对这个世界的好奇心大打折扣。英语真的是你的一块儿心病。</p>
<p>在日常的开发中也经常遇到英语的局限，现在开发，会依赖各种npm，因为依赖有的包产生bug的时候，而这个包很新，就很难去和作者沟通，这个时候google，虽然帮了自己找到真相，但是看不懂是硬伤。</p>
<p>是时候，停下来好好提高自己的英文水平。如果在校大学生看到这篇文章，希望你能花点时间在工作之前把英语学好。</p>
<p>就酱～</p>
]]></content>
    
    <summary type="html">
    
      &lt;p&gt;&lt;img src=&quot;http://ww3.sinaimg.cn/large/72f96cbajw1f9a7xq83mcj20dw0liq5s.jpg&quot; alt=&quot;&quot;&gt;&lt;/p&gt;
&lt;p&gt;豆瓣：&lt;a href=&quot;https://book.douban.com/subject/60
    
    </summary>
    
    
      <category term="阅读" scheme="http://yoursite.com/tags/%E9%98%85%E8%AF%BB/"/>
    
  </entry>
  
  <entry>
    <title>启程</title>
    <link href="http://yoursite.com/2016/07/12/%E5%90%AF%E7%A8%8B/"/>
    <id>http://yoursite.com/2016/07/12/启程/</id>
    <published>2016-07-12T05:46:02.000Z</published>
    <updated>2016-07-12T05:47:33.000Z</updated>
    
    <content type="html"><![CDATA[<blockquote>
<p>曾经的计划都没有严格执行，继续加油。在这里记录点点滴滴吧</p>
</blockquote>
]]></content>
    
    <summary type="html">
    
      &lt;blockquote&gt;
&lt;p&gt;曾经的计划都没有严格执行，继续加油。在这里记录点点滴滴吧&lt;/p&gt;
&lt;/blockquote&gt;

    
    </summary>
    
    
  </entry>
  
  <entry>
    <title>2016年书单</title>
    <link href="http://yoursite.com/2016/01/03/2016%E5%B9%B4%E4%B9%A6%E5%8D%95/"/>
    <id>http://yoursite.com/2016/01/03/2016年书单/</id>
    <published>2016-01-03T04:26:51.000Z</published>
    <updated>2016-01-03T04:31:52.000Z</updated>
    
    <content type="html"><![CDATA[<h3 id="2016年书单（6-24）"><a href="#2016年书单（6-24）" class="headerlink" title="2016年书单（6/24）"></a>2016年书单（6/24）</h3><p>2016年计划读24本书。平均每15天阅读一本，读后发读书笔记</p>
<ol>
<li>《人类简史》</li>
<li>《Just for fun》</li>
<li>《若为自由故》</li>
<li>《大教堂与集市》</li>
<li>《创新公司》</li>
<li>《测试驱动的javascript》</li>
</ol>
]]></content>
    
    <summary type="html">
    
      &lt;h3 id=&quot;2016年书单（6-24）&quot;&gt;&lt;a href=&quot;#2016年书单（6-24）&quot; class=&quot;headerlink&quot; title=&quot;2016年书单（6/24）&quot;&gt;&lt;/a&gt;2016年书单（6/24）&lt;/h3&gt;&lt;p&gt;2016年计划读24本书。平均每15天阅读一本，读后
    
    </summary>
    
    
      <category term="阅读" scheme="http://yoursite.com/tags/%E9%98%85%E8%AF%BB/"/>
    
  </entry>
  
</feed>
